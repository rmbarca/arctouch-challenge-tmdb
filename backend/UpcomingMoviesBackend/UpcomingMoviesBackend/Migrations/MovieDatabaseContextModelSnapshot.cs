// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UpcomingMoviesBackend.Data.Local;

namespace UpcomingMoviesBackend.Migrations
{
    [DbContext(typeof(MovieDatabaseContext))]
    partial class MovieDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UpcomingMoviesBackend.Data.Model.Genre", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("UpcomingMoviesBackend.Data.Model.Movie", b =>
                {
                    b.Property<int>("Id");

                    b.Property<bool>("Adult");

                    b.Property<string>("BackdropPath");

                    b.Property<string>("OriginalLanguage");

                    b.Property<string>("OriginalTitle");

                    b.Property<string>("Overview");

                    b.Property<double>("Popularity");

                    b.Property<string>("PosterPath");

                    b.Property<string>("ReleaseDate");

                    b.Property<string>("Title");

                    b.Property<bool>("Video");

                    b.Property<double>("VoteAverage");

                    b.Property<int>("VoteCount");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("UpcomingMoviesBackend.Data.Model.MovieGenre", b =>
                {
                    b.Property<int>("MovieId");

                    b.Property<int>("GenreId");

                    b.HasKey("MovieId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("MovieGenres");
                });

            modelBuilder.Entity("UpcomingMoviesBackend.Data.Model.MovieGenre", b =>
                {
                    b.HasOne("UpcomingMoviesBackend.Data.Model.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UpcomingMoviesBackend.Data.Model.Movie", "Movie")
                        .WithMany("MovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
